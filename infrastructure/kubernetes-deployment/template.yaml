apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: k8s-deployment-template
  title: "Kubernetes Deployment"
  description: "Plantilla para crear un deployment en Kubernetes"
spec:
  owner: sre-team
  type: infrastructure
  
  parameters:
    - title: Deployment Information
      required:
        - name
        - description
        - image
        - namespace
      properties:
        name:
          title: Deployment Name
          type: string
          description: Name of the Kubernetes deployment
          pattern: '^([a-zA-Z][a-zA-Z0-9]*)(-[a-zA-Z0-9]+)*$'
        description:
          title: Description
          type: string
          description: Description of the deployment
        image:
          title: Container Image
          type: string
          description: Container image to deploy
        namespace:
          title: Kubernetes Namespace
          type: string
          description: Target namespace for deployment
          default: dev1
          enum:
            - dev1
            - sit1
            - uat1
            - prod1
            - python
            - default
          enumNames:
            - 'Development (dev1)'
            - 'System Integration Test (sit1)'
            - 'User Acceptance Test (uat1)'
            - 'Production (prod1)'
            - 'Python Apps (python)'
            - 'Default (default)'

  steps:
    - id: fetch
      name: Fetch Base
      action: fetch:template
      input:
        url: ./template
        values:
          name: ${{ parameters.name }}
          description: ${{ parameters.description }}
          image: ${{ parameters.image }}
          namespace: ${{ parameters.namespace }}
          
    - id: publish
      name: Publish
      action: publish:github
      input:
        description: ${{ parameters.description }}
        repoUrl: github.com?owner=Portfolio-jaime&repo=${{ parameters.name }}
        protectDefaultBranch: false
        repoVisibility: public
        
    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps['publish'].output.repoContentsUrl }}
        catalogInfoPath: "/catalog-info.yaml"

  output:
    links:
      - title: Repository
        url: ${{ steps['publish'].output.remoteUrl }}
