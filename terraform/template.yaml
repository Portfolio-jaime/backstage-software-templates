apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: terraform-template
  title: "Terraform Module"
  description: "Plantilla para crear un módulo de Terraform estandarizado"
spec:
  owner: cloud-team
  type: infrastructure

  parameters:
    - title: Detalles del módulo
      required:
        - moduleName
      properties:
        moduleName:
          title: Nombre del módulo
          type: string
          description: "Nombre del módulo de Terraform (ejemplo: vpc, ecs, rds)"
          pattern: '^[a-zA-Z][a-zA-Z0-9_-]*$'
        moduleDescription:
          title: Descripción del módulo
          type: string
          description: "Breve descripción del módulo (opcional)"
          default: "Módulo de Terraform"
        authorName:
          title: Nombre del autor 
          type: string
          description: "Nombre del autor del módulo (opcional)"
    
  steps:
    - id: fetch-base
      name: Fetch Base
      action: fetch:template
      input:
        url: ./template
        values:
          module_name: ${{ parameters.moduleName }}
          module_description: ${{ parameters.moduleDescription }}
          author_name: ${{ parameters.authorName }}
    - id: publish
      name: Publish
      action: publish:github
      input:
        description: "Módulo de Terraform: ${{ parameters.moduleName }}"
        repoUrl: github.com?owner=your-github-org&repo=${{parameters.moduleName}}-terraform-module
        protectDefaultBranch: false
        repoVisibility: private
    - id: register
      name: Register  
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps['publish'].output.repoContentsUrl }}
        catalogInfoPath: "/catalog-info.yaml"
  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.repoUrl }}
        icon: 'github'
      - title: Module Documentation
        url: ${{ steps.publish.output.repoUrl }}/blob/main/README.md  
        icon: 'book'
      - title: Terraform Registry
        url: https://registry.terraform.io/modules/your-github-org/${{ parameters.moduleName }}/your-provider
        icon: 'terraform'
        description: "Enlace al módulo en el Terraform Registry"
        target: "_blank"
        rel: "noopener"
      - title: Open Issue
        url: ${{ steps.publish.output.repoUrl }}/issues/new
        icon: 'bug'
        description: "Reportar un problema o solicitar una característica"
        target: "_blank"
        rel: "noopener" 
  
  badges:
    - label: terraform
      message: ${{ parameters.moduleName }}
      color: blue
    - label: owner
      message: cloud-team
      color: green
    - label: status
      message: experimental
      color: yellow
    - label: repo
      message: ${{ steps.publish.output.repoUrl }}
      color: lightgrey  
    - label: issues
      message: ${{ steps.publish.output.repoUrl }}/issues
      color: red
    - label: registry
      message: registry.terraform.io/modules/your-github-org/${{ parameters.moduleName }}/your-provider
      color: purple
    - label: author
      message: ${{ parameters.authorName || 'N/A' }}
      color: orange
    - label: created
      message: ${{ steps.publish.output.createdAt | date('YYYY-MM-DD') }}
      color: grey
    - label: updated
      message: ${{ steps.publish.output.updatedAt | date('YYYY-MM-DD') }}
      color: grey
    - label: visibility
      message: private  
      color: lightgrey
    - label: description
      message: ${{ parameters.moduleDescription || 'N/A' }}
      color: lightgrey
    - label: template
      message: terraform-module-template
      color: lightgrey  
    - label: version
      message: 1.0.0
      color: lightgrey  
    - label: license
      message: MIT
      color: lightgrey
    - label: type
      message: infrastructure
      color: lightgrey  
    - label: catalog
      message: ${{ steps.register.output.entityRef || 'N/A' }}
      color: lightgrey

  tags:
    - terraform
    - module
    - infrastructure
    - cloud
    - devops
    - cicd
    - reusable
    - standard
    - best-practice
    - template
    - backstage
    - github
    - registry
    - private
    - automated
    - scaffolded
    - cataloged
    - versioned
    - licensed  

  icon:
    url: https://www.svgrepo.com/show/354202/terraform-icon.svg
    title: Terraform
    props:
      width: 100px
      height: 100px 
      style:
        borderRadius: 50%
        backgroundColor: '#fff'
        padding: 10px
        boxShadow: '0 0 5px rgba(0,0,0,0.3)'
        border: '1px solid #ddd'
        display: 'block'
        margin: '0 auto'
        filter: 'drop-shadow(2px 4px 6px rgba(0,0,0,0.2))'
        transition: 'transform 0.3s ease'
        hover:
          transform: 'scale(1.05)'
        focus:
          outline: '2px solid #000' 
        active:
          transform: 'scale(0.95)'  
      className: 'terraform-icon'
      alt: 'Terraform Icon'
